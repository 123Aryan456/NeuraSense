import os
import requests

class DependencyVulnerabilityChecker:
    """Checks for security vulnerabilities in dependencies using OSV database."""
    def __init__(self, project_dir, config):
        self.project_dir = project_dir
        self.sources = config.get("sources", ["OSV"])

    def check_vulnerabilities(self):
        vulnerabilities = []
        req_paths = [os.path.join(self.project_dir, fname) for fname in ('requirements.txt', 'Pipfile')]
        for req_path in req_paths:
            if os.path.exists(req_path):
                with open(req_path, 'r') as f:
                    for line in f:
                        package = line.strip().split('==')[0]
                        if package:
                            vulns = self._check_osv(package)
                            if vulns:
                                vulnerabilities.extend(vulns)
        return vulnerabilities

    def _check_osv(self, package_name):
        vulns = []
        url = 'https://api.osv.dev/v1/query'
        payload = {
            "package": {
                "name": package_name,
                "ecosystem": "PyPI"
            }
        }
        response = requests.post(url, json=payload)
        if response.status_code == 200:
            data = response.json()
            if 'vulns' in data:
                for vuln in data['vulns']:
                    vulns.append(f"{package_name}: {vuln['id']} - {vuln['summary']}")
        return vulns